{
   "id":"problem2",
   "precode":{
       "python":{
           "headPath":"problem2/python/head",
           "tailPath":"problem2/python/tail",
           "srcPath":"solver.py",
           "binPath":"solver.py"
       },
       "java":{
           "headPath":"problem2/java/head",
           "tailPath":"problem2/java/tail",
           "srcPath":"Solver.java",
           "binPath":"Solver"
       },
       "c":{
           "headPath":"problem2/c/head",
           "tailPath":"problem2/c/tail",
           "srcPath":"solver.c",
           "binPath":"solver"
       }
   },
   "testdataPath":"problem2/testdata",
   "timeout":20000,
   "tests":
       [{"id":"test1","inputPath":"test1.in","solutionPath":"test1.ans"},{"id":"test2","inputPath":"test2.in","solutionPath":"test2.ans"},{"id":"test3","inputPath":"test3.in","solutionPath":"test3.ans"},{"id":"test4","inputPath":"test4.in","solutionPath":"test4.ans"},{"id":"test5","inputPath":"test5.in","solutionPath":"test5.ans"},{"id":"test6","inputPath":"test6.in","solutionPath":"test6.ans"},{"id":"test7","inputPath":"test7.in","solutionPath":"test7.ans"},{"id":"test8","inputPath":"test8.in","solutionPath":"test8.ans"},{"id":"test9","inputPath":"test9.in","solutionPath":"test9.ans"},{"id":"test10","inputPath":"test10.in","solutionPath":"test10.ans"},{"id":"test11","inputPath":"test11.in","solutionPath":"test11.ans"},{"id":"test12","inputPath":"test12.in","solutionPath":"test12.ans"},{"id":"test13","inputPath":"test13.in","solutionPath":"test13.ans"},{"id":"test14","inputPath":"test14.in","solutionPath":"test14.ans"},{"id":"test15","inputPath":"test15.in","solutionPath":"test15.ans"},{"id":"test16","inputPath":"test16.in","solutionPath":"test16.ans"},{"id":"test17","inputPath":"test17.in","solutionPath":"test17.ans"},{"id":"test18","inputPath":"test18.in","solutionPath":"test18.ans"},{"id":"test19","inputPath":"test19.in","solutionPath":"test19.ans"}],
   "codingTimeout": 180,
   "pythonDefault":"def get_index(numbers, k):",
   "javaDefault":"public static int getIndex(int[] numbers, int k) {\n}",
   "cDefault":"size_t get_index(int numbers[], size_t N, int k)\n{\n}",
   "description":"Implement the function <i>getIndex</i> which for a given array of ascending numbers, and an integer <i>k</i>, returns the index of <i>k</i> in <i>numbers</i>.",
   "definition":"<i>getIndex</i> should return the index of <i>k</i> in <i>numbers</i>.",
   "examples":[
        "If <i>numbers</i> = [0, 1, 2, 3], and <i>k</i> = 2, then <i>getIndex</i> should return 2.",
        "If <i>numbers</i> = [2, 4, 6, 8], and <i>k</i> = 4, then <i>getIndex</i> should return 1."
    ]
}
